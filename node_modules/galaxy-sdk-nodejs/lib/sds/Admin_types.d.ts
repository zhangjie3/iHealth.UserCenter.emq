//
// Autogenerated by Thrift Compiler (0.9.2)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//


/**
 * 系统统计指标类型
 */
declare enum MetricKey {
  'METER_METRIC_MIN' = 0,
  'READ_ALLOWED' = 1,
  'READ_THROTTLED' = 2,
  'WRITE_ALLOWED' = 3,
  'WRITE_THROTTLED' = 4,
  'ACTION_SUCCESS' = 5,
  'ACTION_CLIENT_ERROR' = 6,
  'ACTION_SYSTEM_ERROR' = 7,
  'METER_METRIC_MAX' = 49,
  'HISTOGRAM_METRIC_MIN' = 50,
  'CREATE_LATENCY' = 51,
  'DROP_LATENCY' = 52,
  'DESCRIBE_LATENCY' = 53,
  'ALTER_LATENCY' = 54,
  'ENABLE_LATENCY' = 55,
  'DISABLE_LATENCY' = 56,
  'METRICQUERY_LATENCY' = 57,
  'GET_LATENCY' = 58,
  'PUT_LATENCY' = 59,
  'INCREMENT_LATENCY' = 60,
  'DELETE_LATENCY' = 61,
  'SCAN_LATENCY' = 62,
  'BATCH_LATENCY' = 63,
  'HISTOGRAM_METRIC_MAX' = 100,
}

/**
 * 统计指标的子类型
 * (MetricKey, MetricType) 元组唯一确定一个统计指标
 */
declare enum MetricType {
  'COUNT' = 1,
  'M1_RATE' = 2,
  'M5_RATE' = 3,
  'M15_RATE' = 4,
  'MEAN' = 5,
  'STDDEV' = 6,
  'P50' = 7,
  'P75' = 8,
  'P95' = 9,
  'P98' = 10,
  'P99' = 11,
}

/**
 * 时间间隔单位，用于查询统计指标时的下采样
 */
declare enum TimeSpanUnit {
  'SECONDS' = 1,
  'MINUTES' = 2,
  'HOURS' = 3,
}
  appId: string;
  developerId: string;
  tableMappings: { [k: string]: string; };
  oauthAppMapping: { [k: string]: string; };
  appName: string;

  constructor(args?: { appId?: string; developerId?: string; tableMappings?: { [k: string]: string; }; oauthAppMapping?: { [k: string]: string; }; appName?: string; });
}
  tableName: string;
  startTime: number;
  stopTime: number;
  metricKey: MetricKey;
  metricType: MetricType;
  downsampleInterval: number;
  downsampleTimeUnit: TimeSpanUnit;

  constructor(args?: { tableName?: string; startTime?: number; stopTime?: number; metricKey?: MetricKey; metricType?: MetricType; downsampleInterval?: number; downsampleTimeUnit?: TimeSpanUnit; });
}
  tableName: string;
  metricKey: MetricKey;
  metricType: MetricType;
  data: { [k: number]: number; };

  constructor(args?: { tableName?: string; metricKey?: MetricKey; metricType?: MetricType; data?: { [k: number]: number; }; });
}
